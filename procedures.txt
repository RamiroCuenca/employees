1º Create and open env.
    Linux --> $ source employees_env/bin/activate
    Windows --> $ .\employee_env\scripts\activate
2º Create project.
    $ django-admin startproject name
3º Create requirements.txt and procedures.txt
4º Create settings folder with base - local - prod confs. // Don't forget to add __init__.py
5º Move the settings.py info to each of these files and do not forget to import base.py from each.
6º In order to use these new settings, we can specify django to use them each time we runserver:
    $ python3 manage.py runserver --settings=employees.settings.local
   Or we can set manage.py to use these new files as default settings.
   Warning! Do not forget to set it to "prod" if we make the deployment.
7º Create applications folder. // Do not forget to add the __init__.py file.
8º Create app (In applications dir). // home, departments and staff in this case.
    $ django-admin startapp name
9º Add these apps to base.py (Settings of the project).
10º Add urls.py to both apps (so to be more tidy) // Import "re_path" and "include" at project urls.py.
11º Create "templates" folder with subfolders for each app and modify settings so as to recognize it. 
// Chance "BASE_DIR" var and "TEMPLATES[DIRS:]"
12º Create models and deploy them at the db.
    $ python3 manage.py makemigrations
    $ python3 manage.py migrate
    https://docs.djangoproject.com/en/3.1/ref/models/fields/
13º Import and register the created class to the admin file of the app.
    $ admin.site.register(model_name) // Do not forget to import it before quoting it.
14º Create superuser in order to be able to enter de admin site.
    $ python3 manage.py createsuperuser
15º Download PostgreSQL:
    Windows:
        From it's official site.
        https://www.enterprisedb.com/downloads/postgres-postgresql-downloads
        Set password: Ragnarok2020!
        Set Port: 3306
        Set password for pgAdmin: Ragnarok1109!
    Linux:
        Check:
            https://www.postgresql.org/download/linux/ubuntu/
            https://www.youtube.com/watch?v=40uGNsi7ysc&ab_channel=FaztCode
            https://www.pgadmin.org/download/pgadmin-4-apt/
        Installation
            $ sudo apt-get install postgresql postgresql-contrib pgAdmin
        Enter DBGS
            $ sudo -u postgres psql
        List DBs ('q' for quit)
            $ \l 
        Leave DBGS
            $ \q
16º Create employeeDB from pgShell.
    1- LogIn: localhost - postgres - 3306 - postgres - Ragnarok2020!
        $ CREATE DATABASE employees_db;
        $ CREATE USER ramiro;
        $ \c employees_db;   // Enter DB
        $ ALTER ROLE ramiro WITH PASSWORD 'Ragnarok2020!';  // Allow 'ramiro' user to enter the DB. 
17º Set PostgreSQL DB as default for the project.
    Download 'psycopg2'... an adapter from python to PSQL.
18º Download django-CKEditor in order to help us writing posts from 'admin'.
    https://pypi.org/project/django-ckeditor/
    1º Download it.
        $ pip install django-ckeditor
    2º Add it to settings as a 'third parties app' as 'ckeditor'.
    3º Run the 'collectstatic' management command:
        $ ./manage.py collectstatic
    4º
    // Do not forget to add it to requirements.txt.
19º In order to use 'CKEditor', we must:
    1º from ckeditor.fields import RichTextField
    2º create a field with 'RichTextField' in any model. 
Extras:
> Djaneiro extension.
> Django Classed Views Source : https://ccbv.co.uk/
> Django Infinite Scroll : https://dev.to/coderasha/infinite-scroll-with-django-d0a